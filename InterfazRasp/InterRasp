from customtkinter import *
from PIL import Image   
import os
from tkinter import messagebox,filedialog, Toplevel,Button
from tkcalendar import *
from CTkTable import CTkTable

class Principal():

    def Escanear(self):    
        self.ventana.destroy()
            

        
    def __init__(self):

        self.ventana=CTk()
        self.ventana.title("Face-link")
        ancho_pantalla = self.ventana.winfo_screenwidth()
        alto_pantalla = self.ventana.winfo_screenheight()
        ancho_ventana = 797
        alto_ventana = 473
        x_pos = (ancho_pantalla - ancho_ventana) // 2
        y_pos = (alto_pantalla - alto_ventana) // 2
        self.ventana.geometry(f"{ancho_ventana}x{alto_ventana}+{x_pos}+{y_pos}")
        self.ventana.resizable(0, 0)
        #self.ventana.propagate(0)
        #self.ventana.overrideredirect(True)
        self.ventana._set_appearance_mode("light")
        
        ruta_actual = os.getcwd()
        # Reemplaza las diagonales inversas por diagonales normales
        ruta_con_diagonales = ruta_actual.replace("\\", "/")+"/Imagenes"

        
        LogoP_data = Image.open(ruta_con_diagonales+"/FaceLink.png")
        LogoP=CTkImage(light_image=LogoP_data,size=(64,64))
        
        ImgEmp_data=Image.open(ruta_con_diagonales+"/Empleados.png")
        ImgCerrar_data=Image.open(ruta_con_diagonales+"/abierto.png")
        ImgEmp=CTkImage(light_image=ImgEmp_data,size=(32,32))
        ImgCerrar=CTkImage(light_image=ImgCerrar_data,size=(32,32))
        #FrameLateral
        self.almacenador2=CTkFrame(master=self.ventana,width=797,height=473,fg_color="#F6F4EB",corner_radius=0)
        self.almacenador2.pack_propagate(0)
        self.almacenador2.pack(expand=True,side="left")     

        self.botonCerrar = CTkButton(master=self.almacenador2,text="Escanear",anchor="center", fg_color="#4682A9", hover_color="#91C8E4", height=300, width=300, font=("Poppins", 32,"bold"),corner_radius=0,command=self.Escanear).pack(anchor="center", ipady=5, pady=(70, 0))
        
        self.ventana.mainloop()
Principal()
